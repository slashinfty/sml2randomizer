$('#saveStateRom').click(function() {
    let file = document.getElementById('romUpload').files[0];
    let reader = new FileReader();
    reader.onloadend = () => saveStateGenerator(reader.result);
    reader.readAsArrayBuffer(file);
});

function saveStateGenerator(romBuffer) {
    const firstSection = [0xF0, 0xFF, 0xF5, 0xAF, 0xE0, 0xFF, 0xFA, 0x4E, 0xA2, 0xF5, 0x3E, 0x1D, 0xEA, 0x00, 0x20, 0xCD, 0x25, 0x78, 0xF1, 0xEA, 0x00, 0x20, 0xF1, 0xE0, 0xFF, 0xC9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF];
    const secondSection = [0x2D, 0x2D, 0x2D, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x4D, 0x61, 0x72, 0x69, 0x6F, 0x20, 0x4C, 0x61, 0x6E, 0x64, 0x20, 0x32, 0x20, 0x53, 0x61, 0x76, 0x65, 0x20, 0x50, 0x61, 0x74, 0x63, 0x68, 0x20, 0x2D, 0x2D, 0x2D, 0x3E, 0x20, 0xE0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x2F, 0xE6, 0x0F, 0xCB, 0x37, 0x47, 0x3E, 0x10, 0xE0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x2F, 0xE6, 0x0F, 0xB0, 0x4F, 0xFA, 0x80, 0xFF, 0xA9, 0xA1, 0xEA, 0x81, 0xFF, 0x79, 0xEA, 0x80, 0xFF, 0x3E, 0x30, 0xE0, 0x00, 0xFA, 0x80, 0xFF, 0x4F, 0xE6, 0x0C, 0xC8, 0xF0, 0x0F, 0xF5, 0xCD, 0x87, 0x78, 0x47, 0x78, 0xB7, 0x28, 0x07, 0xAF, 0xEA, 0x80, 0xFF, 0xEA, 0x81, 0xFF, 0xF1, 0xE0, 0x0F, 0xC9, 0x53, 0x52, 0x41, 0x4D, 0x5F, 0x43, 0x46, 0x47, 0x04, 0x00, 0x01, 0x02, 0x03, 0x53, 0x53, 0x50, 0x4D, 0x42, 0x79, 0xCB, 0x5F, 0x20, 0x0E, 0xCB, 0x57, 0x28, 0x08, 0xCB, 0x47, 0x20, 0x12, 0xCB, 0x4F, 0x20, 0x0A, 0xAF, 0xC9, 0xCB, 0x7F, 0x20, 0x08, 0xCB, 0x77, 0x28, 0xF6, 0x0E, 0x01, 0x18, 0x02, 0x0E, 0x00, 0x3E, 0x01, 0xEA, 0x00, 0x60, 0x3E, 0x0A, 0xEA, 0x00, 0x00, 0x21, 0x40, 0xFF, 0xF0, 0x44, 0xFE, 0x90, 0x20, 0xFA, 0xCB, 0xBE, 0xFA, 0x81, 0x78, 0xEA, 0x00, 0x40, 0x79, 0xE6, 0x01, 0xC2, 0x22, 0x79, 0xC3, 0xCC, 0x78, 0x08, 0xE0, 0xBF, 0x31, 0x00, 0xC0, 0x16, 0x00, 0xFA, 0x7F, 0x78, 0x5F, 0xCD, 0xBA, 0x79, 0x21, 0x00, 0xFF, 0x11, 0x00, 0xBE, 0x01, 0x30, 0x46, 0xCD, 0xD8, 0x79, 0xAF, 0xE0, 0x1A, 0x21, 0x30, 0xFF, 0x11, 0x30, 0xBE, 0x01, 0xCF, 0x46, 0xCD, 0xD8, 0x79, 0x21, 0x00, 0xFE, 0x11, 0x00, 0xBF, 0x01, 0xA0, 0xFF, 0xCD, 0xD8, 0x79, 0x3E, 0x69, 0xEA, 0xE2, 0xBF, 0x21, 0x00, 0xC0, 0x11, 0x00, 0xA0, 0x01, 0x00, 0x20, 0xD5, 0xC5, 0xCD, 0xE4, 0x79, 0xC1, 0xD1, 0xFA, 0x80, 0x78, 0xEA, 0x00, 0x40, 0x21, 0x00, 0x80, 0x18, 0x53, 0xFA, 0xE2, 0xBF, 0xFE, 0x69, 0x20, 0x66, 0x31, 0x00, 0xC0, 0xFA, 0x7F, 0x78, 0x57, 0x1E, 0x00, 0xCD, 0xBA, 0x79, 0x21, 0x00, 0xBF, 0x11, 0x00, 0xFE, 0x01, 0xA0, 0xFF, 0xCD, 0xD8, 0x79, 0xAF, 0xE0, 0x1A, 0x21, 0x30, 0xBE, 0x11, 0x30, 0xFF, 0x01, 0xCF, 0x46, 0xCD, 0xD8, 0x79, 0x21, 0x01, 0xBE, 0x11, 0x01, 0xFF, 0x01, 0x0F, 0x46, 0xCD, 0xD8, 0x79, 0x21, 0x00, 0xA0, 0x11, 0x00, 0xC0, 0x01, 0x00, 0x20, 0xE5, 0xC5, 0xCD, 0xA4, 0x7A, 0xC1, 0xE1, 0xFA, 0x80, 0x78, 0xEA, 0x00, 0x40, 0x11, 0x00, 0x80, 0x2A, 0x12, 0x13, 0x0B, 0x78, 0xB1, 0x20, 0xF8, 0xFA, 0x81, 0x78, 0xEA, 0x00, 0x40, 0xCD, 0xA0, 0x79, 0xFA, 0xE0, 0xBF, 0x6F, 0xFA, 0xE1, 0xBF, 0x67, 0xF9, 0x21, 0x40, 0xFF, 0xCB, 0xFE, 0xF0, 0x44, 0xFE, 0x90, 0x20, 0xFA, 0xAF, 0xEA, 0x00, 0x40, 0x3C, 0xC9, 0xFA, 0x1A, 0xBE, 0xCB, 0x7F, 0xC8, 0xFA, 0x1A, 0xBE, 0xE0, 0x1A, 0xFA, 0x1E, 0xBE, 0xCB, 0x77, 0xC0, 0xFA, 0x3A, 0xA4, 0xCB, 0xFF, 0xEA, 0x1E, 0xFF, 0xC9, 0x21, 0x00, 0xA0, 0x7A, 0xEA, 0x00, 0x40, 0x46, 0x23, 0x4E, 0x2B, 0x7B, 0xEA, 0x00, 0x40, 0x70, 0x23, 0x71, 0x23, 0xCB, 0x74, 0x28, 0xEC, 0xFA, 0x81, 0x78, 0xEA, 0x00, 0x40, 0xC9, 0x7B, 0xB8, 0x28, 0x02, 0x7E, 0x12, 0x2C, 0x1C, 0x0D, 0x20, 0xF5, 0xC9, 0xD5, 0x7B, 0xEA, 0xE6, 0xBF, 0x7A, 0xEA, 0xE7, 0xBF, 0x79, 0x85, 0x5F, 0xEA, 0xE4, 0xBF, 0x78, 0x8C, 0x57, 0xEA, 0xE5, 0xBF, 0x7E, 0x47, 0x0E, 0x00, 0x7A, 0xBC, 0x20, 0x07, 0x7B, 0xBD, 0x20, 0x03, 0xC3, 0x8A, 0x7A, 0x7E, 0xB8, 0x20, 0x07, 0x3E, 0x80, 0xB9, 0x28, 0x02, 0x18, 0x72, 0x3E, 0x01, 0xB9, 0x28, 0x19, 0xE5, 0x21, 0xE6, 0xBF, 0x2A, 0x66, 0x6F, 0x0D, 0x79, 0x2F, 0x3C, 0x22, 0x78, 0x22, 0x7D, 0xEA, 0xE6, 0xBF, 0x7C, 0xEA, 0xE7, 0xBF, 0xE1, 0x18, 0x50, 0xD5, 0xFA, 0xE6, 0xBF, 0x5F, 0xFA, 0xE7, 0xBF, 0x57, 0xD5, 0x78, 0x13, 0x12, 0x13, 0xD5, 0xFA, 0xE4, 0xBF, 0x5F, 0xFA, 0xE5, 0xBF, 0x57, 0x7A, 0xBC, 0x20, 0x14, 0x7B, 0xBD, 0x20, 0x10, 0xE1, 0x7D, 0xEA, 0xE6, 0xBF, 0x7C, 0xEA, 0xE7, 0xBF, 0xD1, 0x79, 0x3D, 0x12, 0xD1, 0x18, 0x3C, 0xD1, 0x3E, 0x80, 0xB9, 0x28, 0x0E, 0x7E, 0xB8, 0x28, 0x07, 0x12, 0x13, 0x47, 0x23, 0x0C, 0x18, 0xCE, 0x1B, 0x0D, 0x2B, 0x7B, 0xEA, 0xE6, 0xBF, 0x7A, 0xEA, 0xE7, 0xBF, 0xD1, 0x79, 0x3D, 0x12, 0xD1, 0x7E, 0x47, 0x0E, 0x00, 0x0C, 0x23, 0xC3, 0xFD, 0x79, 0x21, 0xE6, 0xBF, 0x2A, 0x66, 0x6F, 0x79, 0xFE, 0x01, 0x38, 0x07, 0x0D, 0x79, 0x2F, 0x3C, 0x22, 0x78, 0x22, 0xD1, 0x7D, 0x93, 0x6F, 0x7C, 0x9A, 0x67, 0xC9, 0x7B, 0x81, 0x4F, 0x7A, 0x88, 0x47, 0x79, 0xBB, 0x20, 0x03, 0x78, 0xBA, 0xC8, 0x2A, 0xC5, 0x4F, 0xCB, 0x7F, 0x20, 0x09, 0x0C, 0x2A, 0x12, 0x13, 0x0D, 0x20, 0xFA, 0x18, 0x07, 0x0D, 0x2A, 0x12, 0x13, 0x0C, 0x20, 0xFB, 0xC1, 0x18, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF];
    let rom = new Uint8Array(romBuffer);
    //rom[0x149] = 0x03;
    let firstOffset = rom[0x14C] == 0x00 ? 0x1FD7 : 0x1FDA;
    firstSection.forEach((b, i) => rom[firstOffset + i] = b);
    secondSection.forEach((b, i) => rom[0x77800 + i] = b);
    checksum(rom);
    saveAs(new Blob([romBuffer], {type: "octet/stream"}), 'sml2_save_states.gb');
}